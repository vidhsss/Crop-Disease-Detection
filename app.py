# -*- coding: utf-8 -*-
"""app.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1VfGEAlj69V2uNQv-7sc1tdLOQ4M4tMnO
"""

import streamlit as st
import numpy as np
import pandas as pd
import time
import os
import shutil
import plotly.graph_objects as go
from PIL import Image
from plotly.subplots import make_subplots
import cv2
from PIL import Image, ImageOps
import numpy as np
import tensorflow as tf

model5=model.tf.keras.models.load_model('plant_disease.hdf5')
def import_and_predict(image_data,model):
    img=ImageOps.fit(image_data,target_size=(220,220),Image.ANTIALIAS)
    x = image.img_to_array(img)
    x = x/255
    result = model.predict([np.expand_dims(x, axis=0)])
    
    return result

def main:
    st.set_option('depreciation.showfileUploaderEncoding',false)
    @st.cache(allow_output_mutation=True)
    st.write("""#plant diseases""")
    file=st.file_uploader("Please upload a crop image",type["jpg","png"])
    if file is None:
    st.text("please upload an image file")
    else:
    image=Image.open(file)
    st.image(image,use_column_width=True)
    predictions=import_and_predict(image,model5)
    from IPython.display import FileLink
    FileLink(r'class_indices.json')
    classes=list(class_indices.keys())
    classresult=np.argmax(predictions,axis=1)
    st.success("This crop is {}".format(classes[classresult[0]]))

if __name__=='__main__':
    main()